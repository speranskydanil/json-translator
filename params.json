{"name":"JSON Translator","tagline":"A library to transform json from one scheme to another.","body":"# Json Translator\r\n\r\nA library to transform json from one scheme to another.\r\n\r\n## Installing\r\n\r\n    gem install json-translator\r\n\r\n    require 'json-translator'\r\n\r\n### Quick example\r\n\r\nSuppose we use API which responses with next simple json:\r\n\r\n    json = <<-json\r\n    {\r\n       \"total\":2,\r\n       \"page\":1,\r\n       \"perPage\":5,\r\n       \"requestLimit\":7,\r\n       \"results\":[\r\n          {\r\n             \"id\":21,\r\n             \"status\":\"active\",\r\n             \"accountName\":\"daz143\",\r\n             \"money\":500.0,\r\n             \"personalInformation\":{\r\n                \"age\":23,\r\n                \"city\":\"Novosibirsk\",\r\n                \"firstName\":\"Danil\",\r\n                \"lastName\":\"Speranskiy\"\r\n             },\r\n             \"documents\":[\r\n                {\r\n                   \"title\":\"Note #1\",\r\n                   \"htmlContent\":\"\\u003cp\\u003eok\\u003c/p\\u003e\"\r\n                },\r\n                {\r\n                   \"title\":\"Note #2\",\r\n                   \"htmlContent\":\"\\u003ch3\\u003eHi there!\\u003c/h3\\u003e\"\r\n                }\r\n             ]\r\n          },\r\n          {\r\n             \"id\":22,\r\n             \"status\":\"deleted\",\r\n             \"accountName\":\"damaty\",\r\n             \"money\":63.24,\r\n             \"personalInformation\":{\r\n                \"age\":24,\r\n                \"city\":\"Berdsk\",\r\n                \"firstName\":\"Dmitry\",\r\n                \"lastName\":\"Kirichenko\"\r\n             },\r\n             \"documents\":[\r\n                {\r\n                   \"title\":\"I am the good\",\r\n                   \"htmlContent\":\"\\u003cb\\u003eyep\\u003c/b\\u003e\"\r\n                }\r\n             ]\r\n          }\r\n       ]\r\n    }\r\n    json\r\n\r\nNow we want to change the json scheme.\r\n\r\n```ruby\r\nhash = JT.t(json) do\r\n  # save as it is\r\n  total\r\n\r\n  # rename 'results' to :users\r\n  # map each user with code below\r\n  iterate :users, :results do\r\n    status\r\n\r\n    # scopes allow you to fetch data from nested objects\r\n    scope :personalInformation do\r\n      age\r\n      city\r\n    end\r\n\r\n    # namespaces allow you to provide nesting in resulting hash\r\n    namespace :account_info do\r\n      money\r\n      # rename 'accountName' to :account_name\r\n      account_name 'accountName'\r\n    end\r\n\r\n    iterate :docs, :documents do\r\n      title\r\n      # rename 'htmlContent' to :text\r\n      text 'htmlContent'\r\n    end\r\n  end\r\nend\r\n\r\npp hash\r\n```\r\n\r\nThe output will be:\r\n\r\n```ruby\r\n{:total=>2,\r\n :users=>\r\n  [{:status=>\"active\",\r\n    :age=>23,\r\n    :city=>\"Novosibirsk\",\r\n    :account_info=>{:money=>500.0, :account_name=>\"daz143\"},\r\n    :docs=>\r\n     [{:title=>\"Note #1\", :text=>\"<p>ok</p>\"},\r\n      {:title=>\"Note #2\", :text=>\"<h3>Hi there!</h3>\"}]},\r\n   {:status=>\"deleted\",\r\n    :age=>24,\r\n    :city=>\"Berdsk\",\r\n    :account_info=>{:money=>63.24, :account_name=>\"damaty\"},\r\n    :docs=>[{:title=>\"I am the God\", :text=>\"<b>yep</b>\"}]}]}\r\n```\r\n\r\n### Shortcuts\r\n\r\nMethods `iterate`, `scope`, `namespace` have one symbol shorcuts:\r\n\r\n```ruby\r\nhash = JT.t(json) {\r\n  total\r\n\r\n  iterate(:users, :results) {\r\n    status\r\n\r\n    s(:personalInformation) { age; city }\r\n    n(:account_info) { money; account_name 'accountName' }\r\n    i(:docs, :documents) { title; text 'htmlContent' }\r\n  }\r\n}\r\n```\r\n\r\n### Syntax with '.' symbol\r\n\r\nScopes and namespaces support syntax with '.' symbol to avoid block nesting.\r\nFor json:\r\n\r\n```ruby\r\njson = <<-json\r\n{\r\n   \"user\":{\r\n      \"name\":\"Speransky Danil\",\r\n      \"age\":23,\r\n      \"city\":\"Novosibirsk\",\r\n      \"account\":{\r\n         \"money\":500.0,\r\n         \"cart\":{\r\n            \"total\":2,\r\n            \"items\":[\r\n               {\r\n                  \"productId\":143,\r\n                  \"count\":1\r\n               },\r\n               {\r\n                  \"productId\":245,\r\n                  \"count\":2\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}\r\njson\r\n```\r\n\r\nInstead of\r\n\r\n```ruby\r\nhash = JT.t(json) {\r\n  s(:user) {\r\n    name\r\n    s(:account) {\r\n      s(:cart) {\r\n        items_count 'total'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\npp hash #=> {:name=>\"Speransky Danil\", :items_count=>2}\r\n```\r\n\r\nYou write\r\n\r\n```ruby\r\nhash = JT.t(json) {\r\n  s(:user) {\r\n    name\r\n    s('account.cart') { items_count 'total' }\r\n  }\r\n}\r\n\r\npp hash #=> {:name=>\"Speransky Danil\", :items_count=>2}\r\n```\r\n\r\n### Notices\r\n\r\n* `JT.t` accepts json string or hash or array\r\n* Itaratings, scopes and namespaces could be nested in any order and arbitrary number of times\r\n\r\n**Author (Speransky Danil):**\r\n[Personal Page](http://dsperansky.info) |\r\n[LinkedIn](http://ru.linkedin.com/in/speranskydanil/en) |\r\n[GitHub](https://github.com/speranskydanil?tab=repositories) |\r\n[StackOverflow](http://stackoverflow.com/users/1550807/speransky-danil)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}